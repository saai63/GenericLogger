name: Code_Coverage

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Latest - GCC", artifact: "linux-gcc.tar.xz",
            os: ubuntu-latest,
            cc: "gcc-9", cxx: "g++-9"
          }

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get install libgtest-dev cmake lcov;

      - name: Build gtest
        run: cd /usr/src/gtest; sudo cmake CMakeLists.txt; sudo make; sudo cp *.a /usr/lib; 
      
      - name: Build
        run : mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON .. ; make;

      - name : Run tests
        run : cd bin; ./Generic_Logger_test;

      - name : Capture coverage stats
        run : |
          cd bin; lcov --directory ../build/ --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
          lcov --list coverage.info
          export CODECOV_TOKEN=${{ secrets.CODECOV_TOKEN }}
          bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
